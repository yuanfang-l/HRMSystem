<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>HRMSystem</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>HRMSystem Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring.version>5.2.2.RELEASE</spring.version>
    <slf4j.version>1.6.6</slf4j.version>
    <log4j.version>1.2.12</log4j.version>
    <mysql.version>8.0.19</mysql.version>
    <mybatis.version>3.4.6</mybatis.version>
  </properties>

  <dependencies>
    <!--单元测试-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!--spring,spring mvc-->
<!--    aspectjweaver是spring的切入点表达式需要用的jar包-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.9.5</version>
    </dependency>
<!--    https://blog.csdn.net/weisong530624687/article/details/50888094-->
    <!--这个jar文件包含在应用中使用Spring的AOP特性时所需要的类和源码级元数据支持，如声明型事务管理-->
<!--    <dependency>-->
<!--      <groupId>org.springframework</groupId>-->
<!--      <artifactId>spring-aop</artifactId>-->
<!--      <version>${spring.version}</version>-->
<!--    </dependency>-->
<!--    这个jar文件为Spring核心提供了大量扩展。可以找到使用Spring ApplicationContext特性时所需的全部类，-->
<!--    JDNI 所需的全部类，instrumentation组件以及校验Validation 方面的相关类。-->
<!--    <dependency>-->
<!--      <groupId>org.springframework</groupId>-->
<!--      <artifactId>spring-context</artifactId>-->
<!--      <version>${spring.version}</version>-->
<!--    </dependency>-->
<!--    这个jar文件包含Web应用开发时用到Spring框架时所需的核心类包括自动载入Web ApplicationContext -->
<!--    特性的类、Struts 与JSF 集成类、文件上传的支持类、Filter 类和大量工具辅助类。-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
<!--    这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。-->
<!--    当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
<!--    对Junit等测试框架的简单封装。-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
<!--    为JDBC、Hibernate、JDO、JPA、Beans等提供的一致的声明式和编程式事务管理支持。-->
<!--    <dependency>-->
<!--      <groupId>org.springframework</groupId>-->
<!--      <artifactId>spring-tx</artifactId>-->
<!--      <version>${spring.version}</version>-->
<!--    </dependency>-->
<!--    这个jar文件包含Spring对JDBC数据访问进行封装的所有类。-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
<!--    java连接MySQL数据库需要的jar包-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
<!--    德鲁伊数据库连接池-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.12</version>
    </dependency>

<!--    编写servlet需要的jar包，比如常用的HttpServletRequest和HttpServletResponse-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
<!--    web项目中jsp页面开发依赖的jar包，比如action请求post或者get等会用到这个jar包-->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.0</version>
      <scope>provided</scope>
    </dependency>
<!--    jsp标准标签库，Apache开发的一套jsp标签-->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

<!--    https://www.cnblogs.com/huangjianping/p/7930353.html-->
<!--    slf4j:Simple Logging Facade for Java，为java提供的简单日志Facade。-->
<!--    Facade：门面，更底层一点说就是接口。-->
<!--    slf4j入口就是众多接口的集合，他不负责具体的日志实现，只在编译时负责寻找合适的日志系统进行绑定。-->
<!--    具体有哪些接口，全部都定义在slf4j-api中-->
<!--    slf4j-log4j12:链接slf4j-api和log4j中间的适配器-->
<!--    log4j:这个是具体的日志系统-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!--    log4j日志记录需要用到的jar包-->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
<!--    mybatis-->
<!--    引入mybatis框架的主要jar包-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
<!--    https://blog.csdn.net/kingmax54212008/article/details/90926347-->
<!--    Spring与MyBatis的集成，需要引入mybatis-spring包。-->
<!--    MyBatis-Spring 会帮助你将 MyBatis 代码无缝地整合到 Spring 中。-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.3.0</version>
    </dependency>
<!--    FTP-->
<!--    https://zhidao.baidu.com/question/2269769245054906348.html-->
<!--    Apache commons net 项目中封装了各种网络协议的客户端，如FTP-->
<!--    <dependency>-->
<!--      <groupId>commons-net</groupId>-->
<!--      <artifactId>commons-net</artifactId>-->
<!--      <version>3.6</version>-->
<!--    </dependency>-->


<!--    导入生成验证码相关的jar包-->
    <dependency>
      <groupId>com.github.penggle</groupId>
      <artifactId>kaptcha</artifactId>
      <version>2.3.2</version>
    </dependency>
<!--    分页插件pageHelper-->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>5.1.10</version>
    </dependency>
<!--    导入Jackson-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.11.0</version>
    </dependency>
<!--    实现文件上传需要的jar包-->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.4</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>HRMSystem</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
